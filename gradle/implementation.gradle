// Shared Gradle configuration for the Sponge implementation projects

ext.common = project(':SpongeCommon')
// Finish configuring SpongeCommon first
evaluationDependsOn common.path

// Apply shared ForgeGradle configuration
apply from: common.file('gradle/minecraft.gradle')

ext.apiSuffix = (api.version - '-SNAPSHOT') + '-HoTea.vorburger.ch-BETA'

dependencies {
    compile common
}

// Add Common access transformers
minecraft {
    atSource common.sourceSets.main
}

jar {
    classifier = 'base'
}

// Apply shadow plugin to include the dependencies in the JAR
apply plugin: 'com.github.johnrengelman.shadow'

shadowJar {
    // Clear the current source set
    // TODO: Find a better way for this, will likely break in the future
    mainSpec.sourcePaths.clear()

    // Make sure SpongeCommon was actually reobfuscated before shading it
    dependsOn reobfJar
    dependsOn common.tasks.reobfJar

    classifier = ''

    // Exclude ForgeGradle classes from shaded JAR
    exclude 'GradleStart**'
    exclude 'net/minecraftforge/**'
    exclude 'dummyThing'

    // Wait for reobf task to be fully configured
    afterEvaluate {
        // Include obfuscated classes
        from zipTree(reobfJar.jar)
    }

    dependencies {
        // SpongeCommon and Mixin
        include project(common.path)
        include dependency('org.spongepowered:mixin')

        // SpongeAPI and event generation
        include project(api.path)
        include dependency('org.spongepowered:event-gen-core')

        include dependency('org.spongepowered:plugin-meta')

        // Include all other dependencies
        include dependency('org.slf4j:slf4j-api')
        include dependency('org.apache.logging.log4j:log4j-slf4j-impl')

        include dependency('com.google.inject:guice')
        include dependency('javax.inject:javax.inject')
        include dependency('aopalliance:aopalliance')

        include dependency('com.flowpowered:flow-math')
        include dependency('com.flowpowered:flow-noise')

        include dependency('ninja.leaping.configurate:configurate-core')
        include dependency('ninja.leaping.configurate:configurate-hocon')
        include dependency('ninja.leaping.configurate:configurate-gson')
        include dependency('ninja.leaping.configurate:configurate-yaml')

        include dependency('org.yaml:snakeyaml')

        include dependency('com.zaxxer:HikariCP')

        include dependency('org.mariadb.jdbc:mariadb-java-client')
        include dependency('com.h2database:h2')
        include dependency('org.xerial:sqlite-jdbc')
    }

    // We include multiple JDBC drivers, so we need to merge the service file to enable them all
    mergeServiceFiles()

    // Prevent other dependencies replacing our license file
    exclude 'LICENSE', 'NOTICE'
}

artifacts {
    archives shadowJar
}

sourceJar {
    // Include SpongeCommon sources
    from common.sourceSets.main.allSource
    from common.sourceSets.java6.allSource
}

devJar {
    // Include SpongeCommon
    from common.sourceSets.main.output
    from common.sourceSets.java6.output
}

// Include SpongeCommon dependencies in our POM
ext.shadedDevProject = common

// Eclipse is too stupid to order the classpath correctly unfortunately...
// Put SpongeAPI and SpongeCommon last
eclipse {
    classpath {
        file {
            whenMerged { classpath ->
                def libs = classpath.entries.findAll { it.path.endsWith('SpongeCommon') || it.path.endsWith('SpongeAPI') }
                def others = classpath.entries - libs
                classpath.entries = others + libs
            }
        }
    }
}
